-- Generated by Oracle SQL Developer Data Modeler 21.4.2.059.0838
--   at:        2022-04-07 22:52:03 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE "Courses offered" (
    course_id       INTEGER NOT NULL,
    course_desc     VARCHAR2(999),
    units           VARCHAR2(99),
    course_remarks  VARCHAR2(99),
    student_stud_id INTEGER NOT NULL
);

CREATE INDEX "Courses offered__IDX" ON
    "Courses offered" (
        course_id
    ASC );

CREATE INDEX "Courses offered__IDXv1" ON
    "Courses offered" (
        course_id
    ASC );

ALTER TABLE "Courses offered" ADD CONSTRAINT "Courses offered_PK" PRIMARY KEY ( course_id );

CREATE TABLE reports (
    report_id           INTEGER NOT NULL,
    reports_name        VARCHAR2(99),
    student_records     VARCHAR2(99),
    transaction_reports VARCHAR2(99),
    student_stud_id     INTEGER NOT NULL
);

CREATE INDEX reports__idx ON
    reports (
        report_id
    ASC );

CREATE INDEX reports__idxv1 ON
    reports (
        report_id
    ASC );

ALTER TABLE reports ADD CONSTRAINT reports_pk PRIMARY KEY ( report_id );

CREATE TABLE school (
    id                          INTEGER NOT NULL,
    stud_id                     INTEGER,
    staff_id                    INTEGER,
    depart_id                   INTEGER,
    report_id                   INTEGER,
    course_id                   INTEGER,
    "Courses offered_course_id" INTEGER NOT NULL,
    student_stud_id             INTEGER NOT NULL,
    reports_report_id           INTEGER NOT NULL,
    staff_staff_id              INTEGER NOT NULL,
    "staff department_staff_id" INTEGER NOT NULL
);

CREATE UNIQUE INDEX school__idx ON
    school (
        id
    ASC );

ALTER TABLE school ADD CONSTRAINT school_pk PRIMARY KEY ( id );

CREATE TABLE staff (
    staff_id INTEGER NOT NULL,
    fname    VARCHAR2(99),
    lname    VARCHAR2(99),
    contact  VARCHAR2(99),
    address  VARCHAR2(99),
    gender   SMALLINT
);

CREATE INDEX staff__idx ON
    staff (
        staff_id
    ASC );

CREATE INDEX staff__idxv1 ON
    staff (
        staff_id
    ASC );

ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( staff_id );

CREATE TABLE "staff department" (
    staff_id                    INTEGER NOT NULL,
    course_line                 VARCHAR2(99),
    staff_staff_id              INTEGER NOT NULL,
    "Courses offered_course_id" INTEGER NOT NULL
);

CREATE INDEX "staff department__IDX" ON
    "staff department" (
        staff_id
    ASC );

CREATE INDEX "staff department__IDXv1" ON
    "staff department" (
        staff_id
    ASC );

ALTER TABLE "staff department" ADD CONSTRAINT "staff department_PK" PRIMARY KEY ( staff_id );

CREATE TABLE student (
    stud_id     INTEGER NOT NULL,
    stfname     VARCHAR2(99),
    stlname     VARCHAR2(99),
    stcourse    VARCHAR2(99),
    styear      VARCHAR2(99),
    stcontact   VARCHAR2(99),
    stage       VARCHAR2(3),
    stbirthdate VARCHAR2(99),
    stgender    SMALLINT
);

CREATE INDEX student__idx ON
    student (
        stud_id
    ASC );

CREATE INDEX student__idxv1 ON
    student (
        stud_id
    ASC );

ALTER TABLE student ADD CONSTRAINT student_pk PRIMARY KEY ( stud_id );

ALTER TABLE "Courses offered"
    ADD CONSTRAINT "Courses offered_student_FK" FOREIGN KEY ( student_stud_id )
        REFERENCES student ( stud_id );

ALTER TABLE reports
    ADD CONSTRAINT reports_student_fk FOREIGN KEY ( student_stud_id )
        REFERENCES student ( stud_id );

ALTER TABLE school
    ADD CONSTRAINT "school_Courses offered_FK" FOREIGN KEY ( "Courses offered_course_id" )
        REFERENCES "Courses offered" ( course_id );

ALTER TABLE school
    ADD CONSTRAINT school_reports_fk FOREIGN KEY ( reports_report_id )
        REFERENCES reports ( report_id );

ALTER TABLE school
    ADD CONSTRAINT school_staff_fk FOREIGN KEY ( staff_staff_id )
        REFERENCES staff ( staff_id );

ALTER TABLE school
    ADD CONSTRAINT "school_staff department_FK" FOREIGN KEY ( "staff department_staff_id" )
        REFERENCES "staff department" ( staff_id );

ALTER TABLE school
    ADD CONSTRAINT school_student_fk FOREIGN KEY ( student_stud_id )
        REFERENCES student ( stud_id );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE "staff department"
    ADD CONSTRAINT "staff department_Courses offered_FK" FOREIGN KEY ( "Courses offered_course_id" )
        REFERENCES "Courses offered" ( course_id );

ALTER TABLE "staff department"
    ADD CONSTRAINT "staff department_staff_FK" FOREIGN KEY ( staff_staff_id )
        REFERENCES staff ( staff_id );

CREATE SEQUENCE "Courses offered_course_id_SEQ" 
START WITH 1 
    nocache order;

CREATE SEQUENCE reports_report_id_SEQ 
START WITH 1 
    nocache order;

CREATE SEQUENCE school_id_SEQ 
START WITH 1 
    nocache order;

CREATE SEQUENCE staff_staff_id_SEQ 
START WITH 1 
    nocache order;

CREATE SEQUENCE "staff department_staff_id_SEQ" 
START WITH 1 
    nocache order;

CREATE SEQUENCE student_stud_id_SEQ 
START WITH 1 
    nocache order;


--join 3 tables with where clause

SELECT student.stfname, student.stgender, staff.contact, staff.address, [Courses offered].course_desc
FROM "Courses offered"
LEFT JOIN student ON [Courses offered].course_id = student.course_id
LEFT JOIN staff ON student.stud_id = staff.stud_id
WHERE student.gender='male';

--query using set operator
SELECT reports_name
FROM reports
WHERE  report_id = 10
INTRESECT
SELECT reports_name
FROM reports
WHERE report = 20

--complex trigger


--grant privileeges

GRANT ALL ON school TO lkpeter;